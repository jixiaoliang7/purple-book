#include<cstdio>
#include<cctype>
#include<string>
#include<queue>
#include<iostream>
#include <vector>
#include<algorithm>
#include<iomanip>
using namespace std;
int N;
int max_length;
priority_queue<string, vector<string>, greater<string> > p;
int main() {
	while (cin >> N) {
		int max_length = 0;
		for (int i = 1; i <= N; ++i) {
			string str;
			cin >> str;
			p.push(str);
			if (str.size() > max_length) max_length = str.size();
		}
		int columns = 62 / (max_length + 2);
		vector<string> result;
		for (int j = 1; j <= N; ++j) {
			result.push_back(p.top());
			p.pop();
		}
		int m;
		if (N % columns == 0) m = N / columns;
		else m = N / columns + 1;
		for (int i = 1; i <= 60; ++i)cout << "-";
		cout << endl;
		for (int i = 0; i <= m-1; ++i) {
			for (int j = 0; i + j <= ((columns - 1) * m-1); j += m) {
				cout << left << setw(max_length + 2) << result[i + j];
			}
			if (i + m * (columns - 1) <= N - 1) cout << left << setw(max_length) << result[i + m * (columns - 1)] << endl;
			else cout << endl;
		}
	}
	return 0;
}
