#include<cstdio>
#include<cctype>
#include<string>
#include<vector>
#include<iterator>
#include<iostream>
#include<algorithm>
#include<sstream>
#include<cstring>
#include<queue>
#include<map>
#include<stack>
#include<set>
using namespace std;
int prime[35];
int A[35];
int vis[35];
int n;
int is_prime(int k) {
	for (int i = 2; i <= k / 2; ++i)
		if ((k % i) == 0) return 0;
	return k;
}
void dfs(int cur) {
	if (cur == n + 1) {
		cout << 1;
		for (int i = 2; i <= n; ++i) cout << " " << A[i];
		cout << endl;
		return;
	}
	if (cur == n) {
		for (int i = 2; i <= n; ++i)
			if (vis[i] == 0 && prime[A[cur - 1] + i] != 0 && prime[1 + i] != 0) {
				A[cur] = i;
				vis[i] = 1;
				dfs(cur + 1);
				vis[i] = 0;
			}
	}
	else
		for(int i=2;i<=n;++i)
			if (vis[i] == 0 && prime[A[cur - 1] + i] != 0) {
				A[cur] = i;
				vis[i] = 1;
				dfs(cur + 1);
				vis[i] = 0;
			}
}
int main() {
	for (int i = 2; i <= 32; ++i) prime[i] = is_prime(i);
	int cnt = 0;
	while (cin >> n) {
		++cnt;
		A[1] = 1;
		if (cnt != 1) cout << endl;
		cout << "Case " << cnt << ":"<<endl;
		dfs(2);
	}
	return 0;
}
